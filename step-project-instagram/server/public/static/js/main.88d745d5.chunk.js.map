{"version":3,"sources":["components/Loader/Loader.module.scss","theme/Theme.js","util/mainMenu.js","services/httpService.js","redux/users/usersActions.js","redux/users/usersActionTypes.js","components/Header/Header.js","redux/posts/postsActions.js","redux/posts/postsActionTypes.js","routes/ProtectedRoutes.js","components/PersonalAvatar/PersonalAvatar.js","components/PersonalCard/PersonalCard..js","redux/modal/modalActions.js","redux/modal/modalActionTypes.js","components/ImageGrid/ImageGrid.js","components/PersonalTab/PersonalTab.js","pages/Personal/Personal.js","pages/NotFound/NotFound.js","util/copyrights.js","pages/Login/Login.js","components/avatar/Avatarka.js","components/Comments/AddComment.js","components/Comments/Comments.js","components/post/Post.js","components/postWrapper/PostsWrapper.js","components/SubscribersMain/SubscribersMainList.js","components/SubscribersMain/SubscribersMain.js","components/SubscriptionsRec/SubscriptionsMainList.js","components/SubscriptionsRec/SubscriptionsMain.js","pages/Feed/Feed.js","components/SubscriptionsRecAll/SubscriptionsAllList.js","components/SubscriptionsRecAll/SubscriptionsAll.js","components/SubscribersAll/SubscribersAllList.js","components/SubscribersAll/SubscribersAll.js","routes/MainRoutes.js","components/Loader/Loader.js","components/ModalPost/ModalPost.js","components/Modal/Modal.js","App.js","redux/users/usersReducer.js","redux/posts/postsReducer.js","redux/modal/modalReducer.js","redux/loginForm/loginFormReducer.js","redux/loginForm/loginFormActionTypes.js","redux/rootReducer.js","redux/configRedux.js","index.js"],"names":["module","exports","createMuiTheme","wrapper","width","margin","overrides","MuiGridListTileBar","actionIcon","mainMenu","name","link","id","axios","interceptors","response","use","error","status","console","log","toast","Promise","reject","get","post","put","delete","patch","toggleSaved","active_user","action_payload","dispatch","http","config","apiEndpoint","action_type","then","result","type","payload","toggleSubscription","data","active_user_updated_data","passive_user_updated_data","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","useDispatch","activeUser","useSelector","state","users","className","AppBar","position","Toolbar","Typography","variant","menu","map","e","Button","key","component","NavLink","to","localStorage","getItem","color","onClick","removeItem","toggleLike","likes_counter_server","likes_counter","connect","props","rest","pathname","PersonalAvatar","avatar","cloudName","publicId","crop","background","height","radius","paper","padding","personalHeaderTop","display","personalHeaderMid","textMargin","PersonalCard","user","Grid","Paper","username","_id","subscribers","includes","posts","length","subscriptions","surname","toggleModal","activePostId","flexWrap","justifyContent","overflow","backgroundColor","palette","marginBottom","gridList","card","postInfo","cursor","icons","alignItems","ImageGridList","GridList","cellHeight","cols","GridListTile","pic_url","GridListTileBar","style","comments","TabPanel","children","value","index","other","role","hidden","aria-labelledby","Container","Box","a11yProps","appBar","boxShadow","tabTitle","PersonalTab","React","useState","setValue","allPosts","postsList","savedPosts","saved_posts","j","push","Tabs","onChange","event","newValue","centered","Tab","label","container","marginTop","personalHeader","withRouter","userList","usersList","match","compareUser","params","comparePost","fullUser","filter","relatedPosts","author_id","avatar_url","btn","content","flexDirection","top","left","transform","history","item","xs","goBack","Copyright","align","Link","Date","getFullYear","secondary","main","form","submit","Login","useHistory","emailRef","useRef","passwordRef","handleSubmit","a","preventDefault","userInputEmail","current","userInputPassword","email","password","res","token","activeUserId","setItem","maxWidth","CssBaseline","Avatar","noValidate","onSubmit","TextField","required","fullWidth","autoComplete","autoFocus","inputRef","mt","Avatarka","avatarUrl","postcomment","placeholder","resize","AddComment","focus","post_id","text","updated_post","addCommentToPost","onKeyUp","keyCode","inputProps","multiline","comment","fontSize","postCommentLink","textDecoration","fontWeight","Comments","allUsers","modalIsOpen","authorOfCommentObj","find","CardActions","media","paddingTop","bookmark","marginLeft","transition","transitions","create","duration","shortest","postHeadLink","saveOpen","liketext","showMoreBtn","postId","userId","fullCom","setFullCom","buttonRef","useDoubleClick","onSingleClick","onDoubleClick","info","ref","latency","likedPostId","Card","CardHeader","subheader","geolocation","CardMedia","CardContent","disableSpacing","cardactions","IconButton","aria-label","liked_posts","indexOf","red","postIsBookedStatus","grey","Divider","uploadedPosts","uploadedPostsList","after","more","loading","load","newData","slice","loader","observer","IntersectionObserver","entries","isIntersecting","threshold","rootMargin","element","setElement","useEffect","currentElement","currentObserver","observe","unobserve","postAuthorId","inheritance","button","SubscribersMainList","subscription","subscriberUser","pos","all","header","userwrapper","list","SubscribersMain","otherUsers","el","List","gutterBottom","activeClassName","ListItem","i","SubscriptionsMainList","subscriber","zIndex","SubscribersBlock","dense","subwrap","rightBlock","right","leftBlock","SubscriptionsAllList","SubscribersAllList","MainRoutes","exact","path","render","Loader","grid","modal","onFocus","setFocus","shadows","activePostObj","authorId","activeUserObj","Modal","aria-describedby","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","loadingUsers","loadingPosts","getUsers","listOfUsers","getPosts","shuffleArray","array","Math","floor","random","temp","listOfPosts","setCurrentUser","jwt","jwtDecode","ex","ThemeProvider","initialStore","usersReducer","store","action","updatedActiveUser","splice","userIndex","update","$splice","savedPostId","activeUser1Id","activeUser1Obj","updatedActiveUser1Obj","activeUser1Index","user_id","activeUserSub","updatedActiveUserSub","indexOfActiveUser","passiveUserId","passiveUserSub","updatedPassiveUserSub","indexOfPassiveUser","postsReducer","targetPost","postIndex","updatedTargetPost","targetPost1","post1Index","modalReducer","loginFormReducer","rootReducer","combineReducers","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","f","createStore","compose","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.88d745d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1jDnt\",\"animate\":\"Loader_animate__1I6Er\",\"animate2\":\"Loader_animate2__3JKFQ\"};","import {createMuiTheme} from '@material-ui/core/styles';\r\n\r\nexport default createMuiTheme({\r\n    wrapper: {\r\n        width: '1200px',\r\n        margin: '0 auto'\r\n    },\r\n    overrides: {\r\n        MuiGridListTileBar: {\r\n            actionIcon: {\r\n                width: '100%'\r\n            }\r\n        }\r\n    }\r\n})\r\n","let mainMenu = [];\r\n\r\nexport default mainMenu = [\r\n    {\r\n        name: 'Feed',\r\n        link: '/feed',\r\n        id: 0\r\n    },\r\n\r\n    {\r\n        name: 'Personal account',\r\n        link: '/account',\r\n        id: 1\r\n    }\r\n]","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.interceptors.response.use(null, error => {\r\n    const expectedError =\r\n        error.response && error.response.status >= 400 && error.response.status < 500;\r\n    if (!expectedError) {\r\n        console.log('Logging the error', error);\r\n        toast.error('An unexpected error occurred.');\r\n    }\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n    patch: axios.patch\r\n};\r\n","import * as actions from \"./usersActionTypes\";\r\nimport config from \"../../config.json\";\r\nimport http from '../../services/httpService';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\n\r\nexport const loadUsersFromServer = () => (dispatch) => {\r\n    dispatch({ type: actions.LOADING_USERS, payload: true });\r\n\r\n    return http\r\n        .get(`${config.apiEndpoint}/users`)\r\n        .then((result) => result.data)\r\n        .then((listOfUsers) => {\r\n            dispatch({ type: actions.SAVE_USERS, payload: listOfUsers });\r\n            dispatch({ type: actions.LOADING_USERS, payload: false });\r\n            // console.log(listOfUsers);\r\n        });\r\n};\r\n\r\nexport const toggleSaved = (active_user, action_payload) => (dispatch) => {\r\n\r\n    return http\r\n        .patch(`${config.apiEndpoint}/users`, {\r\n            active_user,\r\n            action_type: actions.TOGGLE_SAVED_POSTS,\r\n            action_payload\r\n        })\r\n        .then((result) => {\r\n            // console.log(result.data);\r\n            // console.log(`Saved posts: ${result.data.saved_posts}`);\r\n\r\n            if (result.status===200) {\r\n                dispatch({ type: actions.TOGGLE_SAVED_POSTS, payload: {action_payload,active_user}});\r\n            } else return console.error('Nothing was found!')\r\n        });\r\n};\r\n\r\nexport const toggleSubscription = (active_user, action_payload) => (dispatch) => {\r\n\r\n    return http\r\n        .patch(`${config.apiEndpoint}/users`, {\r\n            active_user,\r\n            action_type: actions.TOGGLE_SUBSCRIPTION,\r\n            action_payload // -> Id of user to whom active_user subscribed/unsubscribed from\r\n        })\r\n        .then((result) => {\r\n            if (result.status===200) {\r\n                // console.log(`result.data: ${JSON.stringify(result.data)}`)\r\n                let {active_user_updated_data,passive_user_updated_data} = result.data;\r\n\r\n                dispatch({\r\n                    type: actions.TOGGLE_SUBSCRIPTION_ACTIVE_USER,\r\n                    payload: {active_user_updated_data} // this is correct syntax! PAY ATTENTION!\r\n                });\r\n                dispatch({\r\n                    type: actions.TOGGLE_SUBSCRIBER_PASSIVE_USER,\r\n                    payload: {passive_user_updated_data} // this is correct syntax! PAY ATTENTION!\r\n                });\r\n\r\n            } else return console.error('Nothing was found!')\r\n        });\r\n}\r\n\r\n\r\nexport  const logoutActiveUser = () => (dispatch) => {\r\n    dispatch({ type: actions.LOGOUT_ACTIVE_USER, payload: null });\r\n}\r\n\r\nexport  const setActiveUser = () => (dispatch) => {\r\n    const jwt = localStorage.getItem('x-auth-token');\r\n    const activeUserId = jwtDecode(jwt)._id;\r\n\r\n    dispatch({ type: actions.SET_ACTIVE_USER, payload: activeUserId });\r\n}\r\n\r\n\r\n\r\n","export const GET_USERS = 'GET_USERS';\r\nexport const SAVE_USERS = 'SAVE_USERS';\r\nexport const LOADING_USERS = 'LOADING_USERS';\r\n// if this value is true - users are being downloaded from server\r\n// if this value is false - users were successfully downloaded from server\r\n// ---------------------\r\nexport const TOGGLE_LIKE_USERS = \"TOGGLE_LIKE_USERS\";\r\nexport const TOGGLE_SAVED_POSTS = \"TOGGLE_SAVED_POSTS\";\r\nexport const TOGGLE_SUBSCRIPTION = \"TOGGLE_SUBSCRIPTION\";\r\nexport const TOGGLE_SUBSCRIPTION_ACTIVE_USER = \"TOGGLE_SUBSCRIPTION_ACTIVE_USER\";\r\nexport const TOGGLE_SUBSCRIBER_PASSIVE_USER = \"TOGGLE_SUBSCRIBER_PASSIVE_USER\";\r\n\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const SAVE_POSTS = 'SAVE_POSTS';\r\n\r\nexport const SET_ACTIVE_USER = 'SET_ACTIVE_USER';\r\nexport const LOGOUT_ACTIVE_USER = \"LOGOUT_USER\";\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport menu from '../../util/mainMenu'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {logoutActiveUser} from \"../../redux/users/usersActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nfunction Header() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const activeUser = useSelector(state => state.users.activeUser)\r\n\r\n\r\n    const handleLogoutUser =() => {\r\n        localStorage.removeItem('x-auth-token');\r\n        dispatch(logoutActiveUser())\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {menu.map(e => <Button key={e.id} component={NavLink} to={e.link}>{e.name}</Button>)}\r\n                    </Typography>\r\n                    {!localStorage.getItem('token') && activeUser === null ? <Button color=\"inherit\" component={NavLink} to='/'>Login</Button> : <Button color=\"inherit\" component={NavLink} to='/' onClick={handleLogoutUser}>Logout</Button> }\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import * as actions from \"./postsActionTypes\";\r\nimport config from \"../../config.json\";\r\nimport http from '../../services/httpService';\r\n\r\n\r\nexport const loadPostsFromServer = () => (dispatch) => {\r\n    dispatch({ type: actions.LOADING_POSTS, payload: true });\r\n\r\n    const shuffleArray = (array) => {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            let j = Math.floor(Math.random() * (i + 1));\r\n            let temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n        }\r\n        return array\r\n    }\r\n\r\n    return http\r\n        .get(`${config.apiEndpoint}/posts`)\r\n        .then((result) => result.data)\r\n        .then((listOfPosts) => {\r\n            dispatch({ type: actions.SAVE_POSTS, payload: shuffleArray(listOfPosts) });\r\n            dispatch({ type: actions.LOADING_POSTS, payload: false });\r\n        });\r\n};\r\n\r\nexport const toggleLike = (active_user, action_payload) => (dispatch) => {\r\n\r\n    return http\r\n        .patch(`${config.apiEndpoint}/users`, {\r\n            active_user,\r\n            action_type:\"TOGGLE_LIKE\",\r\n            action_payload\r\n        })\r\n        .then((result) => {\r\n   \r\n            let likes_counter_server = result.data.likes_counter;\r\n            // we receive from server the number of likes that the current post has and handed it over further to the reducer. In order to set correct number of likes!\r\n\r\n            if (result.status===200) {\r\n\r\n                dispatch({ type: actions.TOGGLE_LIKE_USERS, payload: {action_payload,active_user}});\r\n                dispatch({ type: actions.TOGGLE_LIKE_POSTS, payload: {action_payload,likes_counter_server}});\r\n            } else return console.error('Nothing was found!')\r\n        });\r\n    // const {active_user, action_type, action_payload} = req.body;\r\n\r\n};\r\n\r\nexport const addCommentToPost = (author_id, post_id, {text}) => (dispatch) => {\r\n\r\n    return http\r\n        .patch(`${config.apiEndpoint}/posts`, {\r\n            author_id,\r\n            post_id,\r\n            text\r\n        })\r\n        .then((result) => {\r\n            if (result.status===200) {\r\n         \r\n                let updated_post = result.data;\r\n\r\n                dispatch({\r\n                    type: actions.ADD_COMMENT,\r\n                    payload: {post_id, updated_post}\r\n                });\r\n\r\n            } else return console.error('Nothing was found!')\r\n        });\r\n\r\n};\r\n\r\n\r\n\r\n\r\n","export const GET_POSTS = 'GET_POSTS';\r\nexport const SAVE_POSTS = 'SAVE_POSTS';\r\nexport const NEW_POSTS_LOADED = 'NEW_POSTS_LOADED';\r\nexport const LOADING_POSTS = 'LOADING_POSTS';\r\n\r\nexport const TOGGLE_LIKE_POSTS = \"TOGGLE_LIKE_POSTS\";\r\nexport const TOGGLE_LIKE_USERS = \"TOGGLE_LIKE_USERS\";\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const SHOW_MORE = 'SHOW_MORE'\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport {loadUsersFromServer, setActiveUser} from \"../redux/users/usersActions\";\r\nimport {loadPostsFromServer} from \"../redux/posts/postsActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst ProtectedRoutes = (props) => {\r\n    const { activeUser,...rest } = props;\r\n\r\n    return activeUser ?\r\n        ( <Route {...rest} />) :\r\n        ( <Redirect to={{ pathname: '/' }} />);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activeUser: state.users.activeUser,\r\n    };\r\n};\r\n\r\nProtectedRoutes.propTypes = {\r\n    activeUser: PropTypes.string\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ProtectedRoutes);","import React from 'react';\r\nimport {Image, Transformation} from \"cloudinary-react\";\r\n\r\nfunction PersonalAvatar(props) {\r\n    const {avatar} = props\r\n    return (\r\n            <Image\r\n                key = {avatar}\r\n                cloudName = \"dan-insta-step\"\r\n                publicId = {avatar}\r\n                width = \"150\"\r\n                crop = \"scale\">\r\n                <Transformation background=\"#fafafa\" height=\"150\" width=\"150\" crop=\"fill\" radius=\"max\" />\r\n            </Image>\r\n    );\r\n}\r\n\r\nexport default PersonalAvatar;","import React from 'react';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {toggleSubscription} from \"../../redux/users/usersActions\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: '20px',\r\n    },\r\n    personalHeaderTop: {\r\n        display: 'flex'\r\n    },\r\n    personalHeaderMid: {\r\n        display: 'flex',\r\n        margin: '20px 0px 20px 0px'\r\n    },\r\n    textMargin: {\r\n        margin: '0px 20px 0px 20px'\r\n    }\r\n}))\r\n\r\nfunction PersonalCard(props) {\r\n    const classes = useStyles()\r\n    const {user, activeUser} = props\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper className={classes.paper}>\r\n                <Grid className={classes.personalHeaderTop}>\r\n                    <Typography variant='h6' className={classes.textMargin}>\r\n                        {user && user.username}\r\n                    </Typography>\r\n                    {user._id === activeUser ? null : user.subscribers && !user.subscribers.includes(activeUser) ? <Button onClick={()=> dispatch(toggleSubscription(activeUser, user._id)) } variant=\"outlined\" color=\"primary\">\r\n                            Subscribe\r\n                        </Button>\r\n                        : <Button onClick={()=> dispatch(toggleSubscription(activeUser, user._id)) } variant=\"outlined\" color=\"secondary\">\r\n                            Unsubscribe\r\n                        </Button>}\r\n                </Grid>\r\n                <Grid className={classes.personalHeaderMid}>\r\n                    <Typography variant='body2' className={classes.textMargin}>\r\n                        {user.posts && user.posts.length} posts\r\n                    </Typography>\r\n                    <Typography variant='body2' className={classes.textMargin}>\r\n                        {user.subscribers && user.subscribers.length} followers\r\n                    </Typography>\r\n                    <Typography variant='body2' className={classes.textMargin}>\r\n                        {user.subscriptions && user.subscriptions.length} following\r\n                    </Typography>\r\n                </Grid>\r\n                <Typography variant='h6' className={classes.textMargin}>\r\n                    {user && user.name + ' '}\r\n                    {user && user.surname}\r\n                </Typography>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default PersonalCard;","\r\nimport {TOGGLE_MODAL} from './modalActionTypes'\r\n\r\nexport const toggleModal = (activePostId) => (dispatch) => {\r\n    dispatch({type: TOGGLE_MODAL, payload: activePostId})\r\n}\r\n\r\n","export const TOGGLE_MODAL = 'TOGGLE_MODAL';","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport {Image, Transformation} from 'cloudinary-react';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\nimport { Typography } from '@material-ui/core';\r\nimport {toggleModal} from \"../../redux/modal/modalActions\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginBottom:'40px'\r\n    },\r\n    gridList: {\r\n        width: \"100%\",\r\n        '& img': {\r\n            width: '380px',\r\n        },\r\n    },\r\n    card: {\r\n        '&:hover > div > div': {\r\n            display: 'flex'\r\n        }\r\n    },\r\n    postInfo: {\r\n        color: '#fff',\r\n        height: '100%',\r\n        display: 'none',\r\n        cursor: 'pointer'\r\n\r\n    },\r\n    icons: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    }\r\n}));\r\n\r\n\r\nexport default function ImageGridList(props) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const {posts} = props\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <GridList cellHeight={350} className={classes.gridList} cols={3}>\r\n                {posts.map((e) => (\r\n                    <GridListTile key={e._id} cols={1} className={classes.card}>\r\n                        <Image publicId={e.pic_url} key={e.pic_url} cloudName=\"dan-insta-step\">\r\n                            <Transformation width=\"350\" height=\"350\" crop=\"crop\" />\r\n                        </Image>\r\n                        <GridListTileBar\r\n                            className={classes.postInfo}\r\n                            actionIcon={\r\n                                    <div className={classes.icons}>\r\n                                        <FavoriteIcon style={{margin: '5px'}}/>\r\n                                        <Typography style={{margin: '5px'}}>{e.likes_counter}</Typography>\r\n\r\n                                        <ChatBubbleIcon style={{margin: '5px'}}/>\r\n                                        <Typography style={{margin: '5px'}}> {e.comments.length}</Typography>\r\n                                    </div>\r\n                            }\r\n                            onClick = {()=>dispatch(toggleModal(e._id))}\r\n                        />\r\n                    </GridListTile>\r\n                ))}\r\n            </GridList>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport ImageGrid from \"../ImageGrid/ImageGrid\";\r\nimport Container from '@material-ui/core/Container';\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Container>\r\n                    <Box >\r\n                    {children}\r\n                    </Box>\r\n                </Container>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: \"transparent\",\r\n    },\r\n    appBar: {\r\n        background: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n    tabTitle: {\r\n        color: '#000'\r\n    }\r\n}));\r\n\r\nexport default function PersonalTab(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    const allPosts = useSelector(state => state.posts.postsList)\r\n    const {posts, user} = props\r\n\r\n    let savedPosts = []\r\n    if(user.saved_posts) {\r\n        user.saved_posts.map(e => {\r\n            return allPosts.map(j => {\r\n                if(e === j._id) {\r\n                    savedPosts.push(j)\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    // console.log(savedPosts)\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={classes.appBar}>\r\n                <Tabs value={value} onChange={handleChange} centered>\r\n                    <Tab label=\"POSTS\" {...a11yProps(0)} className={classes.tabTitle}/>\r\n                    <Tab label=\"SAVED\" {...a11yProps(1)} className={classes.tabTitle}/>\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <ImageGrid posts={posts}/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                { savedPosts.length > 0 ? <ImageGrid posts={savedPosts}/> : 'User does not have saved posts'}\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport PersonalAvatar from \"../../components/PersonalAvatar/PersonalAvatar\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {useSelector} from \"react-redux\";\r\nimport PersonalCard from \"../../components/PersonalCard/PersonalCard.\";\r\nimport PersonalTab from \"../../components/PersonalTab/PersonalTab\";\r\nimport {withRouter} from \"react-router\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        ...theme.wrapper\r\n    },\r\n    container: {\r\n        marginTop: '80px'\r\n    },\r\n    personalHeader: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        width: '50%',\r\n        margin: '0px auto 40px auto'\r\n    }\r\n}))\r\n\r\nfunction Personal(props) {\r\n    const classes = useStyles()\r\n    const user = useSelector(state => state.users.activeUser)\r\n    const userList = useSelector(state => state.users.usersList)\r\n    const posts = useSelector(state => state.posts.postsList)\r\n    const {match} = props\r\n\r\n    const compareUser = match.params.id ? match.params.id : user\r\n    const comparePost = match.params.id ? match.params.id : user\r\n    \r\n    const fullUser = userList.filter(e => e._id === compareUser)\r\n    const relatedPosts = posts.filter(e => e.author_id === comparePost)\r\n\r\n    return (\r\n        <Grid className={classes.wrapper}>\r\n            <Grid className={classes.container}>\r\n                <Grid className={classes.personalHeader}>\r\n                    <PersonalAvatar avatar={{...fullUser[0]}.avatar_url}/>\r\n                    <PersonalCard user={{...fullUser[0]}} activeUser={user}/>\r\n                </Grid>\r\n            </Grid>\r\n            <PersonalTab posts={relatedPosts} user={{...fullUser[0]}}/>\r\n        </Grid>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(Personal);","import React from 'react';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withRouter } from \"react-router\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        ...theme.wrapper\r\n    },\r\n    btn: {\r\n        margin: 20\r\n    },\r\n    content: {\r\n        width: \"100%\",\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        position: \"absolute\",\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        alignItems: 'center'\r\n    }\r\n}));\r\nfunction NotFound(props) {\r\n    const classes = useStyles()\r\n    const { history } = props;\r\n\r\n    return (\r\n        <Grid container spacing={2} className={classes.root}>\r\n            <Grid container spacing={2} className={classes.wrapper}>\r\n                <Grid item xs={12} className={classes.content}>\r\n                    <Typography variant=\"h1\" >\r\n                        404\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" >\r\n                        Page not found\r\n                    </Typography>\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.btn} onClick={history.goBack}>\r\n                        Go back\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default withRouter(NotFound);\r\n","import Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport React from \"react\";\r\n\r\nexport default function Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" >\r\n                Our Best Team\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}","import React, {useRef} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Copyright from \"../../util/copyrights\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport * as actions from \"../../redux/users/usersActionTypes\";\r\nimport config from \"../../config.json\";\r\nimport http from '../../services/httpService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function Login() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const error = useSelector(state => state.form.error);\r\n    const activeUser = useSelector(state => state.users.activeUser);\r\n    const emailRef = useRef('');\r\n    const passwordRef = useRef('');\r\n\r\n    if (activeUser) {history.push(\"/feed\")};\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        let userInputEmail = emailRef.current.value;\r\n        let userInputPassword = passwordRef.current.value;\r\n\r\n        http\r\n            .post(`${config.apiEndpoint}/auth`, {\r\n                email: userInputEmail,\r\n                password: userInputPassword\r\n            })\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    let token = res.data.token;\r\n                    let activeUserId = res.data.id;\r\n                    localStorage.setItem('x-auth-token', token);\r\n\r\n                    dispatch({\r\n                        type: actions.SET_ACTIVE_USER,\r\n                        payload: activeUserId\r\n                    });\r\n                    history.push(\"/feed\");\r\n\r\n                } else {\r\n                       return console.error('Invalid email or password!');\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline/>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon/>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            inputRef={emailRef}\r\n                            error={error}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            inputRef={passwordRef}\r\n                            error={error}\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n                <Box mt={8}>\r\n                    <Copyright/>\r\n                </Box>\r\n            </Container>\r\n        </>\r\n    );\r\n}","import React from 'react'\r\nimport {Image, Transformation} from 'cloudinary-react';\r\n\r\n\r\nconst Avatarka = ({avatarUrl}) => {\r\n\r\n    return (\r\n        <>\r\n            <Image\r\n                key = {avatarUrl}\r\n                cloudName = \"dan-insta-step\"\r\n                publicId = {avatarUrl}\r\n                width = \"80\"\r\n                crop = \"scale\">\r\n            <Transformation height=\"150\" width=\"150\" crop=\"fill\" radius=\"80\" />\r\n            </Image>\r\n        </>\r\n    )\r\n}\r\nexport default Avatarka;","import React, {useRef} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport {useDispatch} from 'react-redux';\r\nimport {addCommentToPost} from '../../redux/posts/postsActions';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        display: 'flex',\r\n        margin: '0 auto',\r\n        width: '100%',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    postcomment: {\r\n        width: '10%',\r\n        display: 'flex',\r\n\r\n    },\r\n    placeholder: {\r\n        width: '90%',\r\n        display: 'flex',\r\n        resize:'none',        \r\n    },\r\n}));\r\n\r\nconst AddComment = (props) => {\r\n    const {post, active_user, focus} = props\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const inputRef = useRef('')\r\n \r\n    const handleEnterKey = (e)=>{\r\n        if(e.keyCode == '13'){\r\n            handleSubmit(e)\r\n        }\r\n        }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addCommentToPost(active_user, post._id, {text: inputRef.current.value}))\r\n        inputRef.current.value = ''\r\n        console.log(inputRef.current.value)\r\n    }\r\n        if(focus) {\r\n            inputRef.current.focus()\r\n        }\r\n\r\n\r\nreturn (\r\n\r\n    <form className={classes.form} noValidate autoComplete=\"off\" onSubmit={handleSubmit} onKeyUp={handleEnterKey} >\r\n        <TextField placeholder=\"Add comment\" inputProps={{'aria-label': 'description'}} className={classes.placeholder}\r\n               inputRef={inputRef} multiline/>\r\n        <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            className={classes.postcomment}\r\n        >Post</Button>\r\n    </form>\r\n);\r\n}\r\n\r\nexport default AddComment","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {toggleModal} from \"../../redux/modal/modalActions\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  comment: {\r\n    display:'flex',\r\n    // margin:'0 auto',\r\n    width:'100%',\r\n    '& > *': {\r\n    margin: theme.spacing(1),\r\n    },\r\n  },\r\n    text: {\r\n      fontSize: '12px',\r\n      width:'70%',\r\n    },\r\n    username:{\r\n      width:'106px'\r\n    },\r\n    postCommentLink: {\r\n        textDecoration: 'none',\r\n        color: '#013B8A',\r\n        fontWeight: 'bold'\r\n    },\r\n}));\r\n\r\n\r\nconst Comments = (props)=> {\r\n    const {comment,allUsers, modalIsOpen} = props\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const authorOfCommentObj = allUsers.find( user => user._id === comment.author_id );\r\n\r\n  return (\r\n\r\n      <CardActions\r\n          className={classes.comment} >\r\n          <NavLink \r\n              onClick = {()=> {\r\n                  if (modalIsOpen) dispatch(toggleModal())\r\n              }}\r\n              className={classes.postCommentLink}\r\n              to={`/account/${authorOfCommentObj._id}`\r\n              }>\r\n            <Typography className={classes.username}>{authorOfCommentObj.username} </Typography>\r\n          </NavLink>\r\n           <Typography className={classes.text}>{comment.text}</Typography>\r\n      </CardActions>\r\n    \r\n  );\r\n}\r\n\r\nexport default Comments;","import React, {useRef, useState} from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {red, grey} from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport Avatarka from '../avatar/Avatarka';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport {connect, useDispatch} from 'react-redux';\r\nimport {Image} from 'cloudinary-react';\r\nimport {toggleModal} from '../../redux/modal/modalActions';\r\nimport {toggleLike} from \"../../redux/posts/postsActions\";\r\nimport {toggleSaved} from \"../../redux/users/usersActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport AddComment from '../Comments/AddComment';\r\nimport Comments from '../Comments/Comments';\r\nimport useDoubleClick from 'use-double-click';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {CardContent} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport {toast} from \"react-toastify\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 600,\r\n        marginTop: 100\r\n    },\r\n    media: {\r\n        height: 100,\r\n        paddingTop: '56.25%',\r\n    },\r\n    bookmark: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    postHeadLink: {\r\n        textDecoration: 'none',\r\n        color: '#013B8A',\r\n        fontWeight: 'bold'\r\n    },\r\n    saveOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    liketext: {\r\n        marginLeft: 15\r\n    },\r\n    showMoreBtn: {\r\n        fontSize: '10px',\r\n        marginLeft: '15px',\r\n        color: '#013B8A',\r\n    }\r\n}));\r\n\r\nconst Post = (props) => {\r\n    const {postId, userId, allUsers, allPosts, active_user} = props;\r\n  \r\n    const user = allUsers.find(user => user._id === userId);\r\n    const post = allPosts.find(post => post._id === postId);\r\n\r\n    const [fullCom, setFullCom] = useState(false)\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const postIsLikedStatus = (activeUserId, likedPostId) => {\r\n        const activeUser = allUsers.find(user => user._id === activeUserId);\r\n        return activeUser.liked_posts.indexOf(likedPostId) !== -1\r\n    };\r\n    const postIsBookedStatus = (activeUserId, likedPostId) => {\r\n        const activeUser = allUsers.find(user => user._id === activeUserId);\r\n        return activeUser.saved_posts.indexOf(likedPostId) !== -1\r\n    };\r\n    const buttonRef = useRef();\r\n    useDoubleClick({\r\n        onSingleClick: () => {\r\n            dispatch(toggleModal(postId))\r\n        },\r\n        onDoubleClick: () => {\r\n            if (post.author_id === active_user) {\r\n                return toast.info('You can not set likes to your own posts!');\r\n            }\r\n            dispatch(toggleLike(active_user, postId));\r\n        },\r\n        ref: buttonRef,\r\n        latency: 250\r\n    });\r\n\r\n    const handleShowMore = () => {\r\n        setFullCom(!fullCom)\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatarka avatarUrl={user.avatar_url}/>\r\n                    }\r\n                    // action={\r\n                    //   <IconButton aria-label=\"settings\">\r\n                    //     <MoreHorizIcon />\r\n                    //   </IconButton>\r\n                    // }\r\n                    className={classes.postHeadLink}\r\n                    title={user.username}\r\n                    subheader={post && post.geolocation}\r\n                    component={NavLink} to={`/account/${user._id}`}\r\n                />\r\n                <CardMedia\r\n                    ref={buttonRef}\r\n                    title=\"Some picture\">\r\n                    <Image\r\n                        key=\"unique_key\"\r\n                        cloudName=\"dan-insta-step\"\r\n                        publicId={post.pic_url}\r\n                        width=\"600\"\r\n                        crop=\"scale\">\r\n                    </Image>\r\n\r\n                </CardMedia>\r\n\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {post && post.title}\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n                <CardActions disableSpacing className={classes.cardactions}>\r\n                    <IconButton\r\n                        onClick={() => {\r\n                            if (post.author_id === active_user) {\r\n                                return toast.info('You can not set likes to your own posts!');\r\n                            }\r\n                            dispatch(toggleLike(active_user, post._id));\r\n                        }}\r\n                        aria-label=\"liked\">\r\n                        {postIsLikedStatus(active_user, post._id) ? <FavoriteIcon style={{color: red[500]}}/> :\r\n                            <FavoriteBorderIcon/>}\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"comment\" onClick={() => dispatch(toggleModal(post._id))}>\r\n                        <ChatBubbleOutlineIcon/>\r\n                    </IconButton>\r\n                    {/* <IconButton aria-label=\"send\">\r\n                        <SendIcon/>\r\n                    </IconButton> */}\r\n\r\n                    <IconButton\r\n                        className={classes.bookmark}\r\n                        aria-label=\"bookmarked\"\r\n                        onClick={() => dispatch(toggleSaved(active_user, post._id))}\r\n                    >\r\n                        {postIsBookedStatus(active_user, post._id) ? <BookmarkIcon style={{color: grey[800]}}/> :\r\n                            <BookmarkBorderIcon/>}\r\n                    </IconButton>\r\n\r\n                </CardActions>\r\n                <CardActions>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.liketext}>\r\n                        {post.likes_counter} likes\r\n                    </Typography>\r\n                </CardActions>\r\n                <Divider/>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.liketext}>\r\n                    {post.comments && post.comments.length > 0 ? 'Comments' : 'No comments yet'}\r\n                </Typography>\r\n                {!fullCom && post.comments[0] ?\r\n                    <Comments comment={post.comments && post.comments[0]} allUsers={allUsers}/> : null}\r\n                {!fullCom && post.comments[1] ?\r\n                    <Button className={classes.showMoreBtn} onClick={handleShowMore} variant='outlined'>show\r\n                        more</Button> : null}\r\n                {fullCom ? post.comments && post.comments.map(postcomment =>\r\n                    (\r\n                        <>\r\n                            <Comments comment={postcomment} allUsers={allUsers}/>\r\n                            <Divider/>\r\n                        </>\r\n                    )) : null}\r\n\r\n                <AddComment post={post} active_user={active_user}/>\r\n            </Card>\r\n\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        allUsers: state.users.usersList,\r\n        allPosts: state.posts.postsList,\r\n        active_user: state.users.activeUser\r\n    };\r\n};\r\n\r\nPost.propTypes = {\r\n    allUsers: PropTypes.array,\r\n    allPosts: PropTypes.array,\r\n    active_user: PropTypes.string\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Post);\r\n","import React, {useEffect} from 'react'\r\nimport Post from '../post/Post'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect, useDispatch} from \"react-redux\";\r\nimport * as actions from \"../../redux/posts/postsActionTypes\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      flexDirection:'column'\r\n    }\r\n  }));\r\n\r\nconst perPage = 3;\r\n\r\nconst PostsWrapper = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    let {allPosts, uploadedPosts, users, after, more, loading,active_user} = props;\r\n    const classes = useStyles();\r\n\r\n    const load = () => {\r\n        dispatch({ type: actions.LOADING_POSTS });\r\n\r\n        const newData = allPosts.slice(after, after + perPage);\r\n        dispatch({ type: actions.NEW_POSTS_LOADED, newData });\r\n    }\r\n\r\n    // ------------------------------------------\r\n    const loader = React.useRef(load);\r\n\r\n    const observer = React.useRef(\r\n        new IntersectionObserver(\r\n            entries => {\r\n                const first = entries[0];\r\n                if (first.isIntersecting) {\r\n                    loader.current();\r\n                }\r\n            },\r\n            { threshold: 1, rootMargin: '50px' }\r\n        )\r\n    );\r\n    const [element, setElement] = React.useState(null);\r\n\r\n    useEffect(() => {\r\n        loader.current = load;\r\n    }, [load]);\r\n\r\n    useEffect(() => {\r\n        const currentElement = element;\r\n        const currentObserver = observer.current;\r\n\r\n        if (currentElement) {\r\n            currentObserver.observe(currentElement);\r\n        }\r\n\r\n        return () => {\r\n            if (currentElement) {\r\n                currentObserver.unobserve(currentElement);\r\n            }\r\n        };\r\n    }, [element]);\r\n\r\n\r\n    const findAuthorOfPostId = (postAuthorId) => {\r\n        const authorOfPostObj = users.filter( user => user._id === postAuthorId)[0];\r\n        return authorOfPostObj._id;\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root} >\r\n                {uploadedPosts.map(post => <Post postId={post._id} userId={findAuthorOfPostId(post.author_id)} key={post._id}/>)}\r\n            </div>\r\n\r\n            {loading && <p>Loading...</p>}\r\n\r\n            {!loading && more && <p ref={setElement} style={{ background: 'transparent' }}></p>}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allPosts: state.posts.postsList,\r\n        uploadedPosts: state.posts.uploadedPostsList,\r\n        users: state.users.usersList,\r\n        active_user: state.users.activeUser,\r\n        after: state.posts.after,\r\n        more: state.posts.more,\r\n        loading: state.posts.loading\r\n    }\r\n}\r\n\r\nPostsWrapper.propTypes = {\r\n    allPosts: PropTypes.array,\r\n    uploadedPosts: PropTypes.array,\r\n    users: PropTypes.array,\r\n    active_user: PropTypes.string,\r\n    after: PropTypes.number,\r\n    more: PropTypes.bool,\r\n    loading: PropTypes.bool\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(PostsWrapper);","import React from \"react\";\r\nimport {Image, Transformation} from \"cloudinary-react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        marginTop: 10,\r\n        marginLeft: 10,\r\n    },\r\n    username: {\r\n        marginLeft: 10,\r\n        marginTop: 5,\r\n        fontWeight: 'bold',\r\n    },\r\n    name: {\r\n        marginLeft: 10,\r\n        marginTop: 5,\r\n        color: 'grey',\r\n    },\r\n    inheritance: {\r\n        color: 'grey',\r\n        marginLeft: 10,\r\n        marginTop: 5,\r\n    },\r\n    button: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        marginLeft: 'auto',\r\n        marginRight: 40,\r\n    },\r\n    postHeadLink: {\r\n        textDecoration: 'none',\r\n        color: '#013B8A'\r\n    },\r\n}))\r\n\r\nfunction SubscribersMainList(props) {\r\n    const {subscription, users, index, active_user} = props\r\n    const subscriberUser = users.filter(user => user._id === subscription)[0]\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <NavLink to={`/account/${subscription}`}>\r\n                <Image\r\n                    key={index}\r\n                    cloudName=\"dan-insta-step\"\r\n                    publicId={subscriberUser.avatar_url}\r\n                    width=\"50\"\r\n                    crop=\"scale\">\r\n                    <Transformation height=\"150\" width=\"150\" crop=\"fill\" radius=\"max\"/>\r\n                </Image>\r\n            </NavLink>\r\n            <div>\r\n                <div className={classes.username}>\r\n                    <NavLink to={`/account/${subscription}`} className={classes.postHeadLink}>\r\n                        {subscriberUser && subscriberUser.username}\r\n                    </NavLink>\r\n                </div>\r\n                <div className={classes.name}>\r\n                    {subscriberUser && subscriberUser.name + ' '}\r\n                    {subscriberUser && subscriberUser.surname}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscribersMainList\r\n\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Image, Transformation} from \"cloudinary-react\";\r\nimport SubscribersMainList from \"./SubscribersMainList\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            width: '100%',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        pos: {\r\n            display: 'inline-block',\r\n            marginLeft: 10,\r\n            fontWeight: 'bold',\r\n        },\r\n        all: {\r\n            display: 'inline-block',\r\n            marginRight: 12,\r\n            fontWeight: 700,\r\n            textDecoration: 'none',\r\n            color: '#000',\r\n            fontSize: 16,\r\n        },\r\n        header: {\r\n            marginTop: 20,\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        },\r\n        name: {\r\n            marginRight: 5,\r\n            color: 'grey',\r\n            fontSize: 16\r\n        },\r\n        username: {\r\n            fontWeight: 700,\r\n        },\r\n        surname: {\r\n            color: 'grey',\r\n            fontSize: 16,\r\n        },\r\n        wrapper: {\r\n            display: 'flex',\r\n            marginTop: -10,\r\n        },\r\n        userwrapper: {\r\n            marginLeft: 10,\r\n            marginTop: 10,\r\n        },\r\n        avatar: {\r\n            width: 50,\r\n            height: 50,\r\n        },\r\n        list: {\r\n            width: 500,\r\n            height: 200,\r\n            overflow: 'auto',\r\n        },\r\n        postHeadLink: {\r\n            textDecoration: 'none',\r\n            color: '#013B8A'\r\n        },\r\n    })\r\n);\r\n\r\nfunction SubscribersMain(props) {\r\n    const {users, active_user} = props;\r\n    const activeUser = users.filter(user => user._id === active_user)[0];\r\n    let otherUsers = activeUser.subscriptions.filter(( el ) => el !== active_user)\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <NavLink to={`/account/${active_user}`}>\r\n                <Image\r\n                    key={active_user}\r\n                    cloudName=\"dan-insta-step\"\r\n                    publicId={activeUser && activeUser.avatar_url}\r\n                    width=\"80\"\r\n                    crop=\"fill\">\r\n                    <Transformation background=\"#fafafa\" height=\"150\" width=\"150\" crop=\"fill\" radius=\"max\"/>\r\n                </Image>\r\n            </NavLink>\r\n            <div className={classes.userwrapper}>\r\n                <div className={classes.username}>\r\n                    <NavLink className={classes.postHeadLink} to={`/account/${active_user}`}>\r\n                        {activeUser && activeUser.username}\r\n                    </NavLink>\r\n                </div>\r\n                <span className={classes.name}>{activeUser && activeUser.name}</span>\r\n                <span className={classes.surname}>{activeUser && activeUser.surname}</span>\r\n            </div>\r\n            <Card>\r\n                <div className={classes.wrapper}>\r\n                    <List className={classes.root}>\r\n                        <div className={classes.header}>\r\n                            <Typography className={classes.pos} color=\"textSecondary\"\r\n                                        gutterBottom>Subscriptions</Typography>\r\n                            <NavLink to=\"/subscribers\" className={classes.all} activeClassName='active'>Show\r\n                                All</NavLink>\r\n                        </div>\r\n                        <ListItem>\r\n                            <div className={classes.root}>\r\n                                <div className={classes.list}>\r\n                                    {activeUser && otherUsers.length > 0 ? activeUser && otherUsers.map((subscription, i) =>\r\n                                        <SubscribersMainList key={i} subscription={subscription} users={users}\r\n                                                             active_user={active_user}/>) :\r\n                                        <div>Oooops! You aren't subscribed to anyone :(</div>}\r\n                                </div>\r\n                            </div>\r\n                        </ListItem>\r\n                    </List>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SubscribersMain\r\n","import React from \"react\";\r\nimport {Image, Transformation} from \"cloudinary-react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {toggleSubscription} from \"../../redux/users/usersActions\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        marginTop: 10,\r\n        marginLeft: 10,\r\n    },\r\n    username: {\r\n        fontWeight: 'bold',\r\n        marginLeft: 10,\r\n        marginTop: 5,\r\n        textDecoration: 'none',\r\n    },\r\n    inheritance: {\r\n        color: 'grey',\r\n        marginLeft: 10,\r\n        marginTop: 5,\r\n    },\r\n    button: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        marginLeft: 'auto',\r\n        marginRight: 20,\r\n    },\r\n    postHeadLink: {\r\n        textDecoration: 'none',\r\n        color: '#013B8A'\r\n    },\r\n\r\n}))\r\n\r\nfunction SubscriptionsMainList(props) {\r\n    const {subscriber, active_user, index, activeUser} = props\r\n    const dispatch = useDispatch();\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <NavLink to={`/account/${subscriber._id}`} >\r\n                <Image\r\n                    key={index}\r\n                    cloudName=\"dan-insta-step\"\r\n                    publicId={subscriber.avatar_url}\r\n                    width=\"50\"\r\n                    crop=\"scale\">\r\n                    <Transformation height=\"150\" width=\"150\" crop=\"fill\" radius=\"max\"/>\r\n                </Image>\r\n            </NavLink>\r\n            <div>\r\n                <div className={classes.username}>\r\n                    <NavLink to={`/account/${subscriber._id}`} className={classes.postHeadLink}>\r\n                        {subscriber && subscriber.username}\r\n                    </NavLink>\r\n                    </div>\r\n                <div className={classes.inheritance}>{activeUser.subscribers.includes(subscriber._id) ? 'Your subscriber' : null}</div>\r\n            </div>\r\n            <div className={classes.button}><Button onClick={()=> dispatch(toggleSubscription(active_user, subscriber._id)) }\r\n                                                    color=\"primary\" >Subscribe</Button></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionsMainList","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport SubscriptionsMainList from \"./SubscriptionsMainList\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: 20,\r\n        backgroundColor: theme.palette.background.paper,\r\n        zIndex: 5,\r\n    },\r\n    pos: {\r\n        display: 'inline-block',\r\n        marginBottom: 15,\r\n        fontWeight: 'bold',\r\n        fontSize: 16,\r\n    },\r\n    all: {\r\n        display: 'inline-block',\r\n        marginRight: 0,\r\n        fontWeight: 700,\r\n        fontSize: 16,\r\n        textDecoration: 'none',\r\n        color: '#000',\r\n    },\r\n    header: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        marginTop: -5,\r\n    },\r\n    userwrapper: {\r\n        marginLeft: 10,\r\n        marginTop: 10,\r\n    },\r\n    avatar: {\r\n        width: 50,\r\n        height: 50,\r\n    },\r\n}));\r\n\r\nfunction SubscribersBlock(props) {\r\n\r\n    const {users, active_user} = props;\r\n\r\n    const activeUser = users.filter(user => user._id === active_user)[0];\r\n    let usersWithoutActiveUser = users.filter(user => user._id !== active_user);\r\n    let otherUsers = usersWithoutActiveUser.filter(( el ) => !activeUser.subscriptions.includes(el._id)).slice(0, 3)\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <List dense className={classes.main}>\r\n                    <div className={classes.header}>\r\n                        <Typography className={classes.pos} color=\"textSecondary\">People you may know</Typography>\r\n                        <NavLink to=\"/users\" className={classes.all} activeClassName='active'>Show All</NavLink>\r\n                    </div>\r\n                    <div className={classes.subwrap}>\r\n                        {otherUsers.length > 0 ? otherUsers.map((other, i) => <SubscriptionsMainList key={other._id} active_user={active_user} activeUser = {activeUser} subscriber={other} index={i}/>):\r\n                            <div>Oooops! There are no recommendations for you :(</div>}\r\n                    </div>\r\n                </List>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SubscribersBlock\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport PostsWrapper from '../../components/postWrapper/PostsWrapper';\r\nimport PropTypes from \"prop-types\";\r\nimport SubscribersMain from \"../../components/SubscribersMain/SubscribersMain\";\r\nimport SubscribersBlock from \"../../components/SubscriptionsRec/SubscriptionsMain\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        ...theme.wrapper\r\n    },\r\n    rightBlock: {\r\n        position: 'fixed',\r\n        height: '50vh',\r\n        right: 50,\r\n        top: 115,\r\n        width: '30%'\r\n    },\r\n    leftBlock: {\r\n        width: '70%'\r\n    }\r\n\r\n}))\r\n\r\nfunction Feed(props) {\r\n    const {users, active_user} = props;\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item  className={classes.leftBlock}>\r\n                <PostsWrapper/>\r\n            </Grid>\r\n            <Grid item xs={6} className={classes.rightBlock}>\r\n                <SubscribersMain users={users} active_user={active_user}/>\r\n                <SubscribersBlock users={users} active_user={active_user}/>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: state.posts.postsList,\r\n        users: state.users.usersList,\r\n        active_user: state.users.activeUser\r\n    }\r\n}\r\n\r\nFeed.propTypes = {\r\n    posts: PropTypes.array,\r\n    users: PropTypes.array,\r\n    active_user: PropTypes.string\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Feed);","import React from \"react\";\r\nimport {Image, Transformation} from \"cloudinary-react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {toggleSubscription} from \"../../redux/users/usersActions\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        marginTop: 10,\r\n        marginLeft: 10,\r\n    },\r\n    username: {\r\n        marginLeft: 10,\r\n        marginTop: 5,\r\n        fontWeight: 'bold',\r\n    },\r\n    name: {\r\n        marginLeft: 10,\r\n        marginTop: 5,\r\n        color: 'grey',\r\n    },\r\n    inheritance: {\r\n        color: 'grey',\r\n        marginLeft: 10,\r\n        marginTop: 5,\r\n    },\r\n    button: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        marginLeft: 'auto',\r\n        marginRight: 40,\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        fontSize: 16,\r\n    }\r\n}))\r\n\r\nfunction SubscriptionsAllList(props) {\r\n    const {subscriber, activeUser, index, active_user} = props\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <NavLink to={`/account/${subscriber._id}`}>\r\n                <Image\r\n                    key={index}\r\n                    cloudName=\"dan-insta-step\"\r\n                    publicId={subscriber.avatar_url}\r\n                    width=\"80\"\r\n                    crop=\"scale\">\r\n                    <Transformation height=\"150\" width=\"150\" crop=\"fill\" radius=\"max\"/>\r\n                </Image>\r\n            </NavLink>\r\n            <div>\r\n                <div className={classes.username}>\r\n                    <NavLink className={classes.link} to={`/account/${subscriber._id}`}>\r\n                        {subscriber && subscriber.username}\r\n                    </NavLink>\r\n                </div>\r\n                <div className={classes.name}>{subscriber && subscriber.name} {subscriber && subscriber.surname}</div>\r\n                <div className={classes.inheritance}>{activeUser.subscribers.includes(subscriber._id) ? 'Your subscriber' : null}</div>\r\n            </div>\r\n            <div className={classes.button}><Button onClick={()=> dispatch(toggleSubscription(active_user, subscriber._id)) }\r\n                                                    color=\"primary\" >Subscribe</Button></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionsAllList","import React from 'react';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {connect} from \"react-redux\";\r\nimport SubscriptionsAllList from \"./SubscriptionsAllList\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 960,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        backgroundColor: theme.palette.background.paper,\r\n        zIndex: 5,\r\n        marginTop: 10\r\n    },\r\n    header: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 18,\r\n    },\r\n    wrapper: {\r\n        marginTop: 80,\r\n\r\n    }\r\n}));\r\n\r\nfunction UserList(props) {\r\n    const {users, active_user} = props;\r\n    const activeUser = users.filter(user => user._id === active_user)[0];\r\n    let usersWithoutActiveUser = users.filter(user => user._id !== active_user);\r\n    let otherUsers = usersWithoutActiveUser.filter((el) => !activeUser.subscriptions.includes(el._id))\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.header}>Your Recommendations</div>\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <List dense className={classes.root}>\r\n                        <div>\r\n                            {otherUsers.length > 0 ? otherUsers.map((other, i) => <SubscriptionsAllList\r\n                                    key={other._id} active_user={active_user} activeUser={activeUser} subscriber={other}\r\n                                    index={i}/>) :\r\n                                <div>Oooops! There are no recommendations for you :(</div>}\r\n                        </div>\r\n                    </List>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nUserList.propTypes = {\r\n    users: PropTypes.array,\r\n    active_user: PropTypes.string\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.users.usersList,\r\n        active_user: state.users.activeUser\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserList);","import React from \"react\";\r\nimport {Image, Transformation} from \"cloudinary-react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {toggleSubscription} from \"../../redux/users/usersActions\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        marginTop: 10,\r\n        marginLeft: 10,\r\n    },\r\n    username: {\r\n        marginLeft: 10,\r\n        marginTop: 20,\r\n        fontWeight: 'bold',\r\n        fontSize: 16,\r\n    },\r\n    name: {\r\n        marginLeft: 10,\r\n        marginTop: 10,\r\n        color: 'grey',\r\n        fontSize: 16,\r\n    },\r\n    inheritance: {\r\n        color: 'grey',\r\n        marginLeft: 10,\r\n        marginTop: 5,\r\n    },\r\n    button: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        marginLeft: 'auto',\r\n        marginRight: 40,\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        fontSize: 16,\r\n    }\r\n}))\r\n\r\nfunction SubscribersAllList(props) {\r\n    const {subscription, active_user, users, index} = props\r\n    const subscriberUser = users.filter(user => user._id === subscription)[0]\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <NavLink to={`/account/${subscription}`}>\r\n                <Image\r\n                    key={index}\r\n                    cloudName=\"dan-insta-step\"\r\n                    publicId={subscriberUser.avatar_url}\r\n                    width=\"80\"\r\n                    crop=\"scale\">\r\n                    <Transformation height=\"150\" width=\"150\" crop=\"fill\" radius=\"max\"/>\r\n                </Image>\r\n            </NavLink>\r\n            <div>\r\n                <div className={classes.username}>\r\n                    <NavLink className={classes.link} to={`/account/${subscription}`}>\r\n                        {subscriberUser && subscriberUser.username}\r\n                    </NavLink>\r\n                </div>\r\n                <div\r\n                    className={classes.name}>{subscriberUser && subscriberUser.name + ' '}\r\n                    {subscriberUser && subscriberUser.surname}\r\n                </div>\r\n            </div>\r\n            <div className={classes.button}><Button\r\n                onClick={() => dispatch(toggleSubscription(active_user, subscription))} variant=\"outlined\"\r\n                color=\"secondary\">Unsubscribe</Button></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SubscribersAllList","import React from 'react';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {connect} from \"react-redux\";\r\nimport SubscribersAllList from \"./SubscribersAllList\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 960,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        backgroundColor: theme.palette.background.paper,\r\n        zIndex: 5,\r\n        marginTop: 10\r\n    },\r\n    header: {\r\n        marginTop: 20,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 18,\r\n    },\r\n    wrapper: {\r\n        marginTop: 80,\r\n    }\r\n}));\r\n\r\nfunction SubscribersMain(props) {\r\n    const {users, active_user} = props;\r\n    const activeUser = users.filter(user => user._id === active_user)[0];\r\n    let otherUsers = activeUser.subscriptions.filter(( el ) => el !== active_user)\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.header}>Your Subscriptions</div>\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <List dense className={classes.root}>\r\n                        <div>\r\n                            {otherUsers && otherUsers.length > 0 ? otherUsers && otherUsers.map(subscription =>\r\n                                <SubscribersAllList key={subscription} active_user={active_user} subscription={subscription}\r\n                                                    users={users}/>) :\r\n                                <div>Oooops! You aren't subscribed to anyone :( </div>}\r\n                        </div>\r\n                    </List>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nSubscribersMain.propTypes = {\r\n    users: PropTypes.array,\r\n    active_user: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.users.usersList,\r\n        active_user: state.users.activeUser,\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SubscribersMain);","import ProtectedRoutes from \"./ProtectedRoutes\";\r\nimport Personal from \"../pages/Personal/Personal\";\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport NotFound from \"../pages/NotFound/NotFound\";\r\nimport Login from \"../pages/Login/Login\";\r\nimport Feed from \"../pages/Feed/Feed\";\r\nimport React from \"react\";\r\n\r\nimport UserList from \"../components/SubscriptionsRecAll/SubscriptionsAll\";\r\nimport Subscribers from \"../components/SubscribersAll/SubscribersAll\";\r\n\r\n\r\nconst MainRoutes = () => {\r\n\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route exact path='/' render={() => <Login/>} />\r\n                <ProtectedRoutes exact path='/feed' render={() => <Feed/>}/>\r\n                <ProtectedRoutes exact path='/account' render={() => <Personal/>}/>\r\n                <ProtectedRoutes exact path='/account/:id/' render={() => <Personal/>}/>\r\n                <ProtectedRoutes exact path='/users' render={() => <UserList/>}/>\r\n                <ProtectedRoutes exact path='/subscribers' render={() => <Subscribers/>}/>\r\n                <ProtectedRoutes exact path='*' render={() => <NotFound/>}/>\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainRoutes;\r\n","import React from 'react';\r\nimport classes from './Loader.module.scss'\r\n\r\n\r\nconst Loader = () => {\r\n    return (\r\n        // <div className={classes.popup}>\r\n        //     <h1 className={classes.h1}>Receiving data from server</h1>\r\n        //     <div className={classes.ldsRing}>\r\n        //         <div/>\r\n        //         <div/>\r\n        //         <div/>\r\n        //         <div/>\r\n        //     </div>\r\n        <div className={classes.loader}/>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React, {useRef, useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {red, grey} from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport Avatarka from '../avatar/Avatarka';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport {connect, useDispatch, useSelector} from 'react-redux';\r\nimport {Image} from 'cloudinary-react';\r\nimport {toggleLike} from \"../../redux/posts/postsActions\";\r\nimport {toggleSaved} from \"../../redux/users/usersActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {toggleModal} from '../../redux/modal/modalActions';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Comments from '../Comments/Comments';\r\nimport AddComment from '../Comments/AddComment';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport useDoubleClick from 'use-double-click';\r\nimport {toast} from \"react-toastify\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        width: 550,\r\n        boxShadow: 'unset'\r\n    },\r\n    bookmark: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    postHeadLink: {\r\n        textDecoration: 'none',\r\n        color: 'black'\r\n    },\r\n    saveOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    grid: {\r\n        display: 'flex',\r\n    },\r\n    post: {\r\n        width: '600px',\r\n    },\r\n    info: {\r\n        width: '500px',\r\n    },\r\n}));\r\n\r\nconst ModalPost = (props) => {\r\n    const [onFocus, setFocus] = useState(false)\r\n    const {post, user, allUsers, modalIsOpen, active_user} = props;\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const postIsLikedStatus = (activeUserId, likedPostId) => {\r\n        const activeUser = allUsers.find(user => user._id === activeUserId);\r\n        return activeUser.liked_posts.indexOf(likedPostId) !== -1\r\n    };\r\n\r\n    const postIsBookedStatus = (activeUserId, likedPostId) => {\r\n        const activeUser = allUsers.find(user => user._id === activeUserId);\r\n        return activeUser.saved_posts.indexOf(likedPostId) !== -1\r\n    };\r\n\r\n    const buttonRef = useRef();\r\n\r\n    useDoubleClick({\r\n      onSingleClick: ()=>dispatch(toggleModal(post._id)),\r\n      onDoubleClick: ()=> {\r\n          if (post.author_id === active_user) {\r\n          return toast.info('You can not set likes to your own posts!');\r\n            }\r\n          dispatch(toggleLike(active_user, post._id));\r\n      },\r\n      ref: buttonRef,\r\n      latency: 250\r\n    });\r\n\r\n    const handleComClick = () => {\r\n        setFocus(!onFocus)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.grid}>\r\n                <div className={classes.post}>\r\n                    <Card className={classes.card}>\r\n                        <CardMedia\r\n                            ref={buttonRef}\r\n                            title=\"Some picture\"\r\n                            style={{width: '600px'}}\r\n                        >\r\n                            <Image\r\n                                key=\"unique_key\"\r\n                                cloudName=\"dan-insta-step\"\r\n                                publicId={post.pic_url}\r\n                                width=\"600\"\r\n                                crop=\"scale\">\r\n                            </Image>\r\n                        </CardMedia>\r\n                    </Card>\r\n                </div>\r\n                <div className={classes.info}>\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatarka avatarUrl={user.avatar_url}/>\r\n                        }\r\n                        title={user.username}\r\n                        subheader={post && post.geolocation}\r\n                        component={NavLink} to={`/account/${user._id}`} className={classes.postHeadLink}\r\n                        onClick = {()=> {\r\n                            if (modalIsOpen) dispatch(toggleModal())\r\n                        }}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {post && post.title}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing className={classes.cardactions}>\r\n                        <IconButton\r\n                            onClick={() => {\r\n                                if (post.author_id === active_user) {\r\n                                    return toast.info('You can not set likes to your own posts!');\r\n                                }\r\n                                dispatch(toggleLike(active_user, post._id));\r\n                            }}\r\n                            aria-label=\"liked\">\r\n                            {postIsLikedStatus(active_user, post._id) ? <FavoriteIcon style={{color: red[500]}}/> :\r\n                                <FavoriteBorderIcon/>}\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"comment\">\r\n                            <ChatBubbleOutlineIcon onClick={handleComClick}/>\r\n                        </IconButton>\r\n                        {/* <IconButton aria-label=\"send\">\r\n                            <SendIcon />\r\n                        </IconButton> */}\r\n\r\n                        <IconButton\r\n                            className={classes.bookmark}\r\n                            aria-label=\"bookmarked\"\r\n                            onClick={() => dispatch(toggleSaved(active_user, post._id))}\r\n                        >\r\n                            {postIsBookedStatus(active_user, post._id) ? <BookmarkIcon style={{color: grey[800]}}/> :\r\n                                <BookmarkBorderIcon/>}\r\n                        </IconButton>\r\n                    </CardActions>\r\n                    <CardActions>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {post.likes_counter} likes\r\n                        </Typography>\r\n                    </CardActions>\r\n                    <Divider/>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.liketext}>\r\n                        {post.comments && post.comments.length > 0 ? 'Comments' : 'No comments yet'}\r\n                    </Typography>\r\n                    {post.comments.map(postcomment =>\r\n                        (\r\n                            <>\r\n                                <Divider/>\r\n                                <Comments comment={postcomment} allUsers={allUsers} modalIsOpen={modalIsOpen}/>\r\n                            </>\r\n                        ))}\r\n                    <AddComment post={post} active_user={active_user} focus={onFocus}/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        allUsers: state.users.usersList,\r\n        modalIsOpen: state.modal.modalIsOpen,\r\n        active_user: state.users.activeUser\r\n    };\r\n};\r\n\r\n\r\nModalPost.propTypes = {\r\n    allUsers: PropTypes.array,\r\n    modalIsOpen: PropTypes.bool,\r\n    active_user: PropTypes.string\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ModalPost);\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { toggleModal } from '../../redux/modal/modalActions';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\nimport ModalPost from '../ModalPost/ModalPost';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\nconst TransitionsModal = (props)=> {\r\n    const classes = useStyles();\r\n    const {modalIsOpen,activePostId, users, posts} = props;\r\n    // ----------------------------\r\n    const activePostObj = posts.find(post => post._id === activePostId );\r\n    const authorId = activePostObj.author_id;\r\n    const activeUserObj = users.find(user => user._id === authorId);\r\n    // ----------------------------\r\n    // number of likes -> activePostObj.likes_counter\r\n\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n      <div>\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={modalIsOpen}\r\n          onClose={()=>dispatch(toggleModal())}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}\r\n        >\r\n          <Fade in={modalIsOpen}>\r\n            <div className={classes.paper}>\r\n              <ModalPost post={activePostObj} user={activeUserObj}/>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: state.users.usersList,\r\n    posts: state.posts.postsList,\r\n    modalIsOpen: state.modal.modalIsOpen,\r\n    activePostId: state.modal.activePostId,\r\n  };\r\n};\r\n\r\nTransitionsModal.propTypes = {\r\n  users: PropTypes.array,\r\n  posts: PropTypes.array,\r\n  modalIsOpen: PropTypes.bool,\r\n  activePostId: PropTypes.string,\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TransitionsModal);","import {connect} from \"react-redux\";\r\nimport React, {useEffect} from 'react';\r\nimport { ToastContainer} from \"react-toastify\";\r\n\r\nimport {ThemeProvider} from '@material-ui/core/styles';\r\nimport theme from './theme/Theme'\r\nimport Header from \"./components/Header/Header\";\r\nimport MainRoutes from \"./routes/MainRoutes\";\r\nimport {loadUsersFromServer, setActiveUser} from \"./redux/users/usersActions\";\r\nimport {loadPostsFromServer} from \"./redux/posts/postsActions\";\r\nimport Loader from \"./components/Loader/Loader\";\r\nimport PropTypes from \"prop-types\";\r\nimport TransitionsModal from './components/Modal/Modal';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// const sServerAPI = 'https://fe-15-sample-project.herokuapp.com/api';\r\n// когда будем деплоить проект, то нужно указать в эту переменную URL задеплоенного сервера.\r\n\r\n// import {getPosts} from './redux/posts/postsAction'\r\n\r\n\r\nfunction App(props) {\r\n    const {getUsers, getPosts, loadingUsers, loadingPosts, modalIsOpen, setCurrentUser} = props;\r\n\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n        getPosts();\r\n        try {setCurrentUser()}\r\n        catch(ex) {}\r\n\r\n    }, [getUsers,getPosts,setCurrentUser]);\r\n\r\n\r\n    return loadingUsers || loadingPosts ? <Loader /> :\r\n        (\r\n            <>\r\n                <ToastContainer />\r\n                <ThemeProvider theme={theme}>\r\n                    {modalIsOpen ? <TransitionsModal/>: null}\r\n                    <Header/>\r\n                    <MainRoutes/>\r\n                </ThemeProvider>\r\n            </>\r\n        );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        modalIsOpen: state.modal.modalIsOpen,\r\n        loadingUsers: state.users.loading,\r\n        loadingPosts: state.posts.loading,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getUsers: () => dispatch(loadUsersFromServer()),\r\n        getPosts: () => dispatch(loadPostsFromServer()),\r\n        setCurrentUser: () => dispatch(setActiveUser()),\r\n    };\r\n};\r\n\r\nApp.propTypes = {\r\n    modalIsOpen: PropTypes.bool,\r\n    loadingUsers: PropTypes.bool,\r\n    loadingPosts: PropTypes.bool,\r\n    getUsers: PropTypes.func,\r\n    getPosts: PropTypes.func,\r\n    setCurrentUser: PropTypes.func\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import * as actions from \"./usersActionTypes\";\r\nimport update from \"immutability-helper\";\r\n\r\nconst initialStore = {\r\n    loading: false,\r\n    usersList: [],\r\n    activeUser: \"\"\r\n};\r\n\r\nconst usersReducer = (store = initialStore, action) => {\r\n    switch (action.type) {\r\n        // ------------------------------------------------\r\n        case actions.LOADING_USERS:\r\n            return { ...store, loading: action.payload };\r\n        // ------------------------------------------------\r\n        case actions.SAVE_USERS:\r\n            return { ...store, usersList: action.payload };\r\n\r\n        // ------------------------------------------------\r\n        case actions.TOGGLE_LIKE_USERS:\r\n            const {action_payload:likedPostId,active_user} = action.payload;\r\n\r\n            // Now let's update active user's field \"liked_posts\" in redux store.\r\n            const activeUser = store.usersList.find(\r\n                (user) => user._id === active_user\r\n            );\r\n            let updatedActiveUser = {...activeUser};\r\n\r\n            if (activeUser.liked_posts.indexOf(likedPostId)===-1) {\r\n                updatedActiveUser.liked_posts.push(likedPostId);\r\n            } else {\r\n                let index = activeUser.liked_posts.indexOf(likedPostId);\r\n                updatedActiveUser.liked_posts.splice(index,1);\r\n            }\r\n\r\n            const userIndex = store.usersList.indexOf(activeUser);\r\n            return update(store, {\r\n                usersList: { $splice: [[userIndex, 1, updatedActiveUser]] },\r\n            });\r\n\r\n        // ------------------------------------------------\r\n        case actions.TOGGLE_SAVED_POSTS:\r\n\r\n            let {action_payload:savedPostId,active_user:activeUser1Id} = action.payload;\r\n            // console.log(`savedPostId: ${savedPostId}`);\r\n            // console.log(`activeUser1Id: ${activeUser1Id}`);\r\n            // activeUser1Id is basically simply an active_user. But we renamed it due to limitations of JS: variables can not be reassigned within one scope.\r\n            // console.log('TOGGLE_SAVED_POSTS reducer');\r\n\r\n            const activeUser1Obj = store.usersList.find(\r\n                (user) => user._id === activeUser1Id\r\n            );\r\n\r\n            let updatedActiveUser1Obj = {...activeUser1Obj};\r\n\r\n            if (activeUser1Obj.saved_posts.indexOf(savedPostId)===-1) {\r\n                updatedActiveUser1Obj.saved_posts.push(savedPostId);\r\n            } else {\r\n                let index = activeUser1Obj.saved_posts.indexOf(savedPostId);\r\n                updatedActiveUser1Obj.saved_posts.splice(index,1);\r\n            }\r\n\r\n            const activeUser1Index = store.usersList.indexOf(activeUser1Obj);\r\n            return update(store, {\r\n                usersList: { $splice: [[activeUser1Index, 1, updatedActiveUser1Obj]] },\r\n            });\r\n        // ------------------------------------------------\r\n        case actions.TOGGLE_SUBSCRIPTION_ACTIVE_USER:\r\n            let {active_user_updated_data} = action.payload;\r\n\r\n            let activeUserId = active_user_updated_data.user_id;\r\n            const activeUserSub = store.usersList.find(\r\n                (user) => user._id === activeUserId\r\n            )\r\n            let updatedActiveUserSub = {...activeUserSub};\r\n            updatedActiveUserSub.subscriptions = active_user_updated_data.subscriptions;\r\n\r\n            const indexOfActiveUser = store.usersList.indexOf(activeUserSub);\r\n            // console.log(indexOfActiveUser);\r\n\r\n            return update(store, {\r\n                usersList: {$splice: [[indexOfActiveUser, 1, updatedActiveUserSub]]}\r\n            })\r\n        // ------------------------------------------------\r\n\r\n        case actions.TOGGLE_SUBSCRIBER_PASSIVE_USER:\r\n            let {passive_user_updated_data} = action.payload;\r\n\r\n            let passiveUserId = passive_user_updated_data.user_id;\r\n            const passiveUserSub = store.usersList.find(\r\n                (user) => user._id === passiveUserId\r\n            )\r\n            let updatedPassiveUserSub = {...passiveUserSub};\r\n            updatedPassiveUserSub.subscribers = passive_user_updated_data.subscribers;\r\n\r\n            const indexOfPassiveUser = store.usersList.indexOf(passiveUserSub);\r\n            // console.log(`indexOfPassiveUser: ${indexOfPassiveUser}`);\r\n\r\n            return update(store, {\r\n                usersList: {$splice: [[indexOfPassiveUser, 1, updatedPassiveUserSub]]}\r\n            })\r\n\r\n        // ------------------------------------------------\r\n        case actions.SET_ACTIVE_USER :\r\n            return { ...store, activeUser: action.payload }\r\n\r\n        case actions.LOGOUT_ACTIVE_USER :\r\n            return { ...store, activeUser: action.payload }\r\n\r\n        default:\r\n            return store;\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n","import * as actions from \"./postsActionTypes\";\r\nimport update from \"immutability-helper\";\r\nconst perPage = 3;\r\n\r\nconst initialStore = {\r\n    loading: false,\r\n    postsList: [],\r\n    uploadedPostsList: [],\r\n    more: true,\r\n    after: 0,\r\n\r\n};\r\n\r\nconst postsReducer = (store = initialStore, action) => {\r\n\r\n    switch (action.type) {\r\n        case actions.LOADING_POSTS:\r\n            return { ...store, loading: action.payload };\r\n\r\n        case actions.SAVE_POSTS:\r\n            return { ...store, postsList: action.payload };\r\n        // ----------------------------------------------\r\n        case actions.TOGGLE_LIKE_POSTS:\r\n            const {action_payload:likedPostId,likes_counter_server} = action.payload;\r\n            // console.log('Toggle_like reducer');\r\n            // console.log(likedPost);\r\n\r\n            // Now let's update post's field \"likes_counter\" in redux store.\r\n            const targetPost = store.postsList.find(\r\n                (post) => post._id === likedPostId\r\n            );\r\n            const postIndex = store.postsList.indexOf(targetPost);\r\n            const updatedTargetPost = {\r\n                ...targetPost,\r\n                likes_counter : likes_counter_server\r\n            };\r\n            return update(store, {\r\n                postsList: { $splice: [[postIndex, 1, updatedTargetPost]] },\r\n            });\r\n        // ----------------------------------------------\r\n        case actions.ADD_COMMENT:\r\n            const {post_id, updated_post} = action.payload;\r\n\r\n            const targetPost1 = store.postsList.find((post) => post._id === post_id);\r\n            const post1Index = store.postsList.indexOf(targetPost1);\r\n\r\n            return update(store, {\r\n                postsList: { $splice: [[post1Index, 1, updated_post]] },\r\n            });\r\n        // ----------------------------------------------\r\n        case actions.NEW_POSTS_LOADED:\r\n            return {\r\n                ...store,\r\n                loading: false,\r\n                uploadedPostsList: [...store.uploadedPostsList, ...action.newData],\r\n                more: action.newData.length === perPage,\r\n                after: store.after + action.newData.length,\r\n            }\r\n        // ----------------------------------------------\r\n\r\n        default:\r\n            return store;\r\n    }\r\n}\r\n\r\nexport default postsReducer;\r\n","const initialStore = {\r\n    modalIsOpen: false,\r\n    activePostId: null\r\n  }\r\n  \r\n  const modalReducer = (store = initialStore,action) =>{\r\n    const activePostId = action.payload ? action.payload : null;\r\n    switch (action.type) {\r\n      case 'TOGGLE_MODAL':\r\n          return {\r\n              ...store,\r\n              modalIsOpen: !store.modalIsOpen,\r\n              activePostId: activePostId\r\n          }\r\n\r\n        default:\r\n          return store\r\n     \r\n    }\r\n  }\r\n    \r\nexport default modalReducer;","import * as actions from \"./loginFormActionTypes\";\r\nconst initialStore = {\r\n    error: false\r\n};\r\n\r\nconst loginFormReducer = (store = initialStore, action) => {\r\n    switch (action.type) {\r\n\r\n        case actions.WRONG_DATA :\r\n            return { ...store, error: action.payload }\r\n\r\n        case actions.CORRECT_DATA :\r\n            return { ...store, error: action.payload }\r\n\r\n        default:\r\n            return store;\r\n    }\r\n}\r\n\r\nexport default loginFormReducer;\r\n","export const WRONG_DATA = 'WRONG_DATA';\r\nexport const CORRECT_DATA = 'CORRECT_DATA';","import {combineReducers} from 'redux';\r\nimport usersReducer from \"./users/usersReducer\";\r\nimport postsReducer from \"./posts/postsReducer\";\r\nimport modalReducer from './modal/modalReducer';\r\nimport loginFormReducer from \"./loginForm/loginFormReducer\";\r\n// import currentUserReducer from './users/currentUserReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    users: usersReducer,\r\n    posts: postsReducer,\r\n    modal: modalReducer,\r\n    form: loginFormReducer,\r\n    // currentUser: currentUserReducer,\r\n    // modalStatus: toggleModalReducer\r\n})\r\n\r\nexport default rootReducer;\r\n","import {createStore, applyMiddleware, compose} from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n// const composeEnhancers =\r\n//     typeof window === 'object' &&\r\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n//         window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n//             // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n//         }) : compose;\r\n\r\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    : (f) => f;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(applyMiddleware(thunk), devTools)\r\n);\r\n\r\n// const store = createStore(\r\n//     rootReducer,\r\n//     composeEnhancers(\r\n//         applyMiddleware(\r\n//             thunk\r\n//         )\r\n//     )\r\n// )\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport {Provider} from 'react-redux';\r\nimport store from \"./redux/configRedux\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <CssBaseline>\r\n                <App/>\r\n            </CssBaseline>\r\n        </Router>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}